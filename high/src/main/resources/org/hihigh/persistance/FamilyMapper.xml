<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.hihigh.persistance.FamilyMapper">
	<!-- 회원 목록 -->
	<select id="getMemberList" resultType="org.hihigh.domain.FamilyVO">
		select * from member
	</select>
	
	<!-- 회원 인원 -->
	<select id="count" resultType="int">
	    select count(*) from member
	</select>
	
	<!-- 회원 목록 + 페이징 -->
	<select id="mlistPage" parameterType="hashMap" resultType="org.hihigh.domain.FamilyVO">
		select id, name, tel, email, age, reg_date
		from member
		limit #{param1}, #{param2}
	</select>
	
	<!-- 예약 목록 -->
	<select id="admReser"  resultType="org.hihigh.domain.EventVO">
		select id, company, name, tel, num, datech, reservation
		from event
	</select>
	
	<!-- id중복체크 -->
	<select id="selectId" resultType="boolean">
		select count(*) from member where id = #{id}
	</select>
	
	<!-- 회원가입 -->
	<insert id="insertMember">
	    insert into member
	    ( id, pwd, name, age, tel, email )
	    values
	    (#{id}, #{pwd}, #{name}, #{age}, #{tel}, #{email} )
	</insert>
	
	<!-- id 찾기 -->
	<select id="idfind" resultType="org.hihigh.domain.FamilyVO">
		select * from member
		where name = #{name} and email = #{email}
	</select>
	
	<!-- 임시 비밀번호 발급 -->
	<select id="pwdfind" resultType="Integer">
		select
		count(*) from member
		where id = #{id} and name = #{name}
	</select>
	<!-- 새로운 비밀번호 저장 -->
	<update id="pwdUpdate">
		update member
		set  pwd = #{pwd}
		where
		id = #{id} and name = #{name}
	</update>
	
	<!-- 로그인 -->
	<select id="login" resultType="org.hihigh.domain.FamilyVO">
    	SELECT * FROM member WHERE id = #{id} AND pwd = #{pwd}
	</select>
    
    <!-- 관리자가 회원 삭제 -->
     <delete id="admdelMem" parameterType="String">
        DELETE FROM member WHERE id = #{id}
     </delete>
     
     <!-- 내 정보 -->
     <select id="getMyInfo" resultType="org.hihigh.domain.FamilyVO">
    	SELECT * FROM member WHERE id = #{id}
	</select>
	
	<!-- mypage 수정에서 이미지 가져오기 -->
	<select id="selectImg" resultType="java.lang.String">
		SELECT filename FROM member WHERE id = #{id};
	</select>
	
	<!-- 내 정보 수정 -->
	 <update id="updateMember" >
	    UPDATE member
	    SET pwd = #{pwd},
	        tel = #{tel},
	        email = #{email},
	        filename = #{filename}
	    WHERE id = #{id}
	</update>

	<!-- 연령별 통계 -->
	<select id="TotalAge" resultType="java.util.Map">
	    SELECT
	        CASE
	            WHEN age LIKE '20대' THEN '20대'
	            WHEN age LIKE '30대' THEN '30대'
	            WHEN age LIKE '40대' THEN '40대'
	            WHEN age LIKE '50대' THEN '50대'
	            WHEN age LIKE '60대' THEN '60대'
	        END AS ageGroup,
	        COUNT(*) AS count
	    FROM member
	    WHERE age IN ('20대', '30대', '40대', '50대', '60대')
	    GROUP BY ageGroup
	</select>

	<!-- 각 회사 별 연령별 통계 -->
	<select id="Balgre" resultType="java.lang.Integer">
	    SELECT COUNT(*) AS count
	    FROM event e
	    JOIN member m ON e.id = m.id
	    WHERE e.company = '발그레' AND m.age LIKE #{age}
	</select>
	
	<select id="Perge" resultType="java.lang.Integer">
	    SELECT COUNT(*) AS count
	    FROM event e
	    JOIN member m ON e.id = m.id
	    WHERE e.company = '퍼지' AND m.age LIKE #{age}
	</select>
	
	<select id="Fimrico" resultType="java.lang.Integer">
	    SELECT COUNT(*) AS count
	    FROM event e
	    JOIN member m ON e.id = m.id
	    WHERE e.company = '핌리코' AND m.age LIKE #{age}
	</select>
	<select id="National" resultType="java.lang.Integer">
	    SELECT COUNT(*) AS count
	    FROM event e
	    JOIN member m ON e.id = m.id
	    WHERE e.company = '네셔널' AND m.age LIKE #{age}
	</select>
	<select id="Geo" resultType="java.lang.Integer">
	    SELECT COUNT(*) AS count
	    FROM event e
	    JOIN member m ON e.id = m.id
	    WHERE e.company = '지오' AND m.age LIKE #{age}
	</select>
	
	<!-- 발그레 회사 지원 목록 -->
	<select id="getBalgre" resultType="org.hihigh.domain.EventVO">
        SELECT * FROM event WHERE company = #{company}
    </select>
    
    <!-- 회원 예약 승인 -->
    <update id="approveEvent">
	    UPDATE event
	    SET reservation = '1'
	    WHERE id = #{id} AND company = #{company} AND reservation = '0'
	</update>
	
	<delete id="deleteById" parameterType="String">
        DELETE FROM event WHERE id = #{id}
    </delete>
	

	<!-- 내 예약 현황 -->
	<select id="myReservation" resultType="org.hihigh.domain.EventVO" >
	    select * from event where id = #{id}
	</select>
	
	


</mapper>
 






